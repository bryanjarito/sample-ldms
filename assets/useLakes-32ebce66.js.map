{"version":3,"file":"useLakes-32ebce66.js","sources":["../../src/data/pages/lakes.ts","../../src/pages/lakes/composables/useLakes.ts"],"sourcesContent":["import { sleep } from '../../services/utils'\nimport { Lake } from '../../pages/lakes/types'\nimport lakesDb from './lakes-db.json'\nimport projectsDb from './projects-db.json'\nimport { Project } from '../../pages/projects/types'\n\nexport const lakes = lakesDb as Lake[]\n\n// Simulate API calls\n\nexport type Pagination = {\n  page: number\n  perPage: number\n  total: number\n}\n\nexport type Sorting = {\n  sortBy: keyof Lake | undefined\n  sortingOrder: 'asc' | 'desc' | null\n}\n\nexport type Filters = {\n  isActive: boolean\n  search: string\n}\n\nconst getSortItem = (obj: any, sortBy: string) => {\n  if (sortBy === 'projects') {\n    return obj.projects.map((project: any) => project.project_name).join(', ')\n  }\n\n  return obj[sortBy]\n}\n\nexport const getLakes = async (filters: Partial<Filters & Pagination & Sorting>) => {\n  await sleep(1000)\n  const { isActive, search, sortBy, sortingOrder } = filters\n  let filteredLakes = lakes\n\n  // filteredLakes = filteredLakes.filter((lake) => lake.active === isActive)\n\n  if (search) {\n    filteredLakes = filteredLakes.filter((lake) => lake.englishName.toLowerCase().includes(search.toLowerCase()))\n  }\n\n  // filteredLakes = filteredLakes.map((lake) => ({ ...lake, projects: getUserProjects(lake.id) }))\n\n  if (sortBy && sortingOrder) {\n    filteredLakes = filteredLakes.sort((a, b) => {\n      const first = getSortItem(a, sortBy)\n      const second = getSortItem(b, sortBy)\n      if (first > second) {\n        return sortingOrder === 'asc' ? 1 : -1\n      }\n      if (first < second) {\n        return sortingOrder === 'asc' ? -1 : 1\n      }\n      return 0\n    })\n  }\n\n  const { page = 1, perPage = 10 } = filters || {}\n  return {\n    data: filteredLakes.slice((page - 1) * perPage, page * perPage),\n    pagination: {\n      page,\n      perPage,\n      total: filteredLakes.length,\n    },\n  }\n}\n\nexport const addUser = async (user: User) => {\n  await sleep(1000)\n  users.unshift(user)\n}\n\nexport const updateUser = async (user: User) => {\n  await sleep(1000)\n  const index = users.findIndex((u) => u.id === user.id)\n  users[index] = user\n}\n\nexport const removeUser = async (lake: Lake) => {\n  await sleep(1000)\n  lakes.splice(\n    lakes.findIndex((u) => u.id === lake.id),\n    1,\n  )\n}\n","import { Ref, ref, unref, watch } from 'vue'\nimport { getLakes, updateUser, addUser, removeUser, type Filters, Pagination, Sorting } from '../../../data/pages/lakes'\nimport { Lake } from '../types'\nimport { watchIgnorable } from '@vueuse/core'\n\nconst makePaginationRef = () => ref<Pagination>({ page: 1, perPage: 10, total: 0 })\nconst makeSortingRef = () => ref<Sorting>({ sortBy: 'fullname', sortingOrder: null })\nconst makeFiltersRef = () => ref<Partial<Filters>>({ isActive: true, search: '' })\n\nexport const useLakes = (options?: {\n  pagination?: Ref<Pagination>\n  sorting?: Ref<Sorting>\n  filters?: Ref<Partial<Filters>>\n}) => {\n  const isLoading = ref(false)\n  const lakes = ref<Lake[]>([])\n\n  const { filters = makeFiltersRef(), sorting = makeSortingRef(), pagination = makePaginationRef() } = options || {}\n\n  const fetch = async () => {\n    isLoading.value = true\n    const { data, pagination: newPagination } = await getLakes({\n      ...unref(filters),\n      ...unref(sorting),\n      ...unref(pagination),\n    })\n    lakes.value = data\n\n    ignoreUpdates(() => {\n      pagination.value = newPagination\n    })\n\n    isLoading.value = false\n  }\n\n  const { ignoreUpdates } = watchIgnorable([pagination, sorting], fetch, { deep: true })\n\n  watch(\n    filters,\n    () => {\n      // Reset pagination to first page when filters changed\n      pagination.value.page = 1\n      fetch()\n    },\n    { deep: true },\n  )\n\n  fetch()\n\n  return {\n    isLoading,\n\n    filters,\n    sorting,\n    pagination,\n\n    lakes,\n\n    fetch,\n\n    async add(lake: Lake) {\n      isLoading.value = true\n      await addUser(lake)\n      await fetch()\n      isLoading.value = false\n    },\n\n    async update(lake: Lake) {\n      isLoading.value = true\n      await updateUser(lake)\n      await fetch()\n      isLoading.value = false\n    },\n\n    async remove(user: User) {\n      isLoading.value = true\n      await removeUser(user)\n      await fetch()\n      isLoading.value = false\n    },\n  }\n}\n"],"names":["lakes","lakesDb","getSortItem","obj","sortBy","project","getLakes","filters","sleep","isActive","search","sortingOrder","filteredLakes","lake","a","b","first","second","page","perPage","addUser","user","updateUser","index","u","removeUser","makePaginationRef","ref","makeSortingRef","makeFiltersRef","useLakes","options","isLoading","sorting","pagination","fetch","data","newPagination","unref","ignoreUpdates","watchIgnorable","watch"],"mappings":"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"}