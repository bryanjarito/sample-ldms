{"version":3,"file":"DamsPage-f15fea11.js","sources":["../../src/pages/dams/widgets/UserAvatar.vue","../../src/pages/dams/widgets/UsersTable.vue","../../src/pages/dams/widgets/EditUserForm.vue","../../src/pages/dams/composables/useUsers.ts","../../src/pages/dams/DamsPage.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { PropType } from 'vue'\nimport { User } from '../types'\n\nconst avatarColor = (userName: string) => {\n  const colors = ['primary', '#FFD43A', '#ADFF00', '#262824', 'danger']\n  const index = userName.charCodeAt(0) % colors.length\n  return colors[index]\n}\n\ndefineProps({\n  user: {\n    type: Object as PropType<User>,\n    required: true,\n  },\n  size: {\n    type: String,\n    default: 'medium',\n  },\n})\n\nconst isUrl = (avatar: string) => {\n  return avatar.startsWith('http') || avatar.startsWith('blob:')\n}\n</script>\n\n<template>\n  <VaAvatar\n    :size=\"size\"\n    :src=\"isUrl(user.avatar) ? user.avatar : ''\"\n    :fallback-text=\"user.avatar || user.fullname[0]\"\n    :color=\"avatarColor(user.fullname)\"\n  />\n</template>\n","<script setup lang=\"ts\">\nimport { defineVaDataTableColumns, useModal } from 'vuestic-ui'\nimport { User, UserRole } from '../types'\nimport UserAvatar from './UserAvatar.vue'\nimport { PropType, computed, toRef } from 'vue'\nimport { Pagination, Sorting } from '../../../data/pages/users'\nimport { useVModel } from '@vueuse/core'\nimport { Project } from '../../projects/types'\n\nconst columns = defineVaDataTableColumns([\n  { label: 'Full Name', key: 'fullname', sortable: true },\n  { label: 'Email', key: 'email', sortable: true },\n  { label: 'Username', key: 'username', sortable: true },\n  { label: 'Role', key: 'role', sortable: true },\n  { label: 'Projects', key: 'projects', sortable: true },\n  { label: ' ', key: 'actions', align: 'right' },\n])\n\nconst props = defineProps({\n  users: {\n    type: Array as PropType<User[]>,\n    required: true,\n  },\n  loading: { type: Boolean, default: false },\n  pagination: { type: Object as PropType<Pagination>, required: true },\n  sortBy: { type: String as PropType<Sorting['sortBy']>, required: true },\n  sortingOrder: { type: String as PropType<Sorting['sortingOrder']>, required: true },\n})\n\nconst emit = defineEmits<{\n  (event: 'edit-user', user: User): void\n  (event: 'delete-user', user: User): void\n  (event: 'update:sortBy', sortBy: Sorting['sortBy']): void\n  (event: 'update:sortingOrder', sortingOrder: Sorting['sortingOrder']): void\n}>()\n\nconst users = toRef(props, 'users')\nconst sortByVModel = useVModel(props, 'sortBy', emit)\nconst sortingOrderVModel = useVModel(props, 'sortingOrder', emit)\n\nconst roleColors: Record<UserRole, string> = {\n  admin: 'danger',\n  user: 'background-element',\n  owner: 'warning',\n}\n\nconst totalPages = computed(() => Math.ceil(props.pagination.total / props.pagination.perPage))\n\nconst { confirm } = useModal()\n\nconst onUserDelete = async (user: User) => {\n  const agreed = await confirm({\n    title: 'Delete user',\n    message: `Are you sure you want to delete ${user.fullname}?`,\n    okText: 'Delete',\n    cancelText: 'Cancel',\n    size: 'small',\n    maxWidth: '380px',\n  })\n\n  if (agreed) {\n    emit('delete-user', user)\n  }\n}\n\nconst formatProjectNames = (projects: Project[]) => {\n  if (projects.length === 0) return 'No projects'\n  if (projects.length <= 2) {\n    return projects.map((project) => project.project_name).join(', ')\n  }\n\n  return (\n    projects\n      .slice(0, 2)\n      .map((project) => project.project_name)\n      .join(', ') +\n    ' + ' +\n    (projects.length - 2) +\n    ' more'\n  )\n}\n</script>\n\n<template>\n  <VaDataTable\n    v-model:sort-by=\"sortByVModel\"\n    v-model:sorting-order=\"sortingOrderVModel\"\n    :columns=\"columns\"\n    :items=\"users\"\n    :loading=\"$props.loading\"\n  >\n    <template #cell(fullname)=\"{ rowData }\">\n      <div class=\"flex items-center gap-2 max-w-[230px] ellipsis\">\n        <UserAvatar :user=\"rowData as User\" size=\"small\" />\n        {{ rowData.fullname }}\n      </div>\n    </template>\n\n    <template #cell(username)=\"{ rowData }\">\n      <div class=\"max-w-[120px] ellipsis\">\n        {{ rowData.username }}\n      </div>\n    </template>\n\n    <template #cell(email)=\"{ rowData }\">\n      <div class=\"ellipsis max-w-[230px]\">\n        {{ rowData.email }}\n      </div>\n    </template>\n\n    <template #cell(role)=\"{ rowData }\">\n      <VaBadge :text=\"rowData.role\" :color=\"roleColors[rowData.role as UserRole]\" />\n    </template>\n\n    <template #cell(projects)=\"{ rowData }\">\n      <div class=\"ellipsis max-w-[300px] lg:max-w-[450px]\">\n        {{ formatProjectNames(rowData.projects) }}\n      </div>\n    </template>\n\n    <template #cell(actions)=\"{ rowData }\">\n      <div class=\"flex gap-2 justify-end\">\n        <VaButton\n          preset=\"primary\"\n          size=\"small\"\n          icon=\"mso-edit\"\n          aria-label=\"Edit user\"\n          @click=\"$emit('edit-user', rowData as User)\"\n        />\n        <VaButton\n          preset=\"primary\"\n          size=\"small\"\n          icon=\"mso-delete\"\n          color=\"danger\"\n          aria-label=\"Delete user\"\n          @click=\"onUserDelete(rowData as User)\"\n        />\n      </div>\n    </template>\n  </VaDataTable>\n\n  <div class=\"flex flex-col-reverse md:flex-row gap-2 justify-between items-center py-2\">\n    <div>\n      <b>{{ $props.pagination.total }} results.</b>\n      Results per page\n      <VaSelect v-model=\"$props.pagination.perPage\" class=\"!w-20\" :options=\"[10, 50, 100]\" />\n    </div>\n\n    <div v-if=\"totalPages > 1\" class=\"flex\">\n      <VaButton\n        preset=\"secondary\"\n        icon=\"va-arrow-left\"\n        aria-label=\"Previous page\"\n        :disabled=\"$props.pagination.page === 1\"\n        @click=\"$props.pagination.page--\"\n      />\n      <VaButton\n        class=\"mr-2\"\n        preset=\"secondary\"\n        icon=\"va-arrow-right\"\n        aria-label=\"Next page\"\n        :disabled=\"$props.pagination.page === totalPages\"\n        @click=\"$props.pagination.page++\"\n      />\n      <VaPagination\n        v-model=\"$props.pagination.page\"\n        buttons-preset=\"secondary\"\n        :pages=\"totalPages\"\n        :visible-pages=\"5\"\n        :boundary-links=\"false\"\n        :direction-links=\"false\"\n      />\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.va-data-table {\n  ::v-deep(.va-data-table__table-tr) {\n    border-bottom: 1px solid var(--va-background-border);\n  }\n}\n</style>\n","<script setup lang=\"ts\">\nimport { PropType, computed, ref, watch } from 'vue'\nimport { useForm } from 'vuestic-ui'\nimport { User, UserRole } from '../types'\nimport UserAvatar from './UserAvatar.vue'\nimport { useProjects } from '../../projects/composables/useProjects'\nimport { validators } from '../../../services/utils'\n\nconst props = defineProps({\n  user: {\n    type: Object as PropType<User | null>,\n    default: null,\n  },\n  saveButtonLabel: {\n    type: String,\n    default: 'Save',\n  },\n})\n\nconst defaultNewUser: User = {\n  id: -1,\n  avatar: '',\n  fullname: '',\n  role: 'user',\n  username: '',\n  notes: '',\n  email: '',\n  active: true,\n  projects: [],\n}\n\nconst newUser = ref<User>({ ...defaultNewUser })\n\nconst isFormHasUnsavedChanges = computed(() => {\n  return Object.keys(newUser.value).some((key) => {\n    if (key === 'avatar' || key === 'projects') {\n      return false\n    }\n\n    return newUser.value[key as keyof User] !== (props.user ?? defaultNewUser)?.[key as keyof User]\n  })\n})\n\ndefineExpose({\n  isFormHasUnsavedChanges,\n})\n\nwatch(\n  () => props.user,\n  () => {\n    if (!props.user) {\n      return\n    }\n\n    newUser.value = {\n      ...props.user,\n      avatar: props.user.avatar || '',\n    }\n  },\n  { immediate: true },\n)\n\nconst avatar = ref<File>()\n\nconst makeAvatarBlobUrl = (avatar: File) => {\n  return URL.createObjectURL(avatar)\n}\n\nwatch(avatar, (newAvatar) => {\n  newUser.value.avatar = newAvatar ? makeAvatarBlobUrl(newAvatar) : ''\n})\n\nconst form = useForm('add-user-form')\n\nconst emit = defineEmits(['close', 'save'])\n\nconst onSave = () => {\n  if (form.validate()) {\n    emit('save', newUser.value)\n  }\n}\n\nconst roleSelectOptions: { text: Capitalize<UserRole>; value: UserRole }[] = [\n  { text: 'Admin', value: 'admin' },\n  { text: 'User', value: 'user' },\n  { text: 'Owner', value: 'owner' },\n]\n\nconst { projects } = useProjects({ pagination: ref({ page: 1, perPage: 9999, total: 10 }) })\n</script>\n\n<template>\n  <VaForm v-slot=\"{ isValid }\" ref=\"add-user-form\" class=\"flex-col justify-start items-start gap-4 inline-flex w-full\">\n    <VaFileUpload\n      v-model=\"avatar\"\n      type=\"single\"\n      hide-file-list\n      class=\"self-stretch justify-start items-center gap-4 inline-flex\"\n    >\n      <UserAvatar :user=\"newUser\" size=\"large\" />\n      <VaButton preset=\"primary\" size=\"small\">Add image</VaButton>\n      <VaButton\n        v-if=\"avatar\"\n        preset=\"primary\"\n        color=\"danger\"\n        size=\"small\"\n        icon=\"delete\"\n        class=\"z-10\"\n        @click.stop=\"avatar = undefined\"\n      />\n    </VaFileUpload>\n    <div class=\"self-stretch flex-col justify-start items-start gap-4 flex\">\n      <div class=\"flex gap-4 flex-col sm:flex-row w-full\">\n        <VaInput\n          v-model=\"newUser.fullname\"\n          label=\"Full name\"\n          class=\"w-full sm:w-1/2\"\n          :rules=\"[validators.required]\"\n          name=\"fullname\"\n        />\n        <VaInput\n          v-model=\"newUser.username\"\n          label=\"Username\"\n          class=\"w-full sm:w-1/2\"\n          :rules=\"[validators.required]\"\n          name=\"username\"\n        />\n      </div>\n      <div class=\"flex gap-4 flex-col sm:flex-row w-full\">\n        <VaInput\n          v-model=\"newUser.email\"\n          label=\"Email\"\n          class=\"w-full sm:w-1/2\"\n          :rules=\"[validators.required, validators.email]\"\n          name=\"email\"\n        />\n        <VaSelect\n          v-model=\"newUser.projects\"\n          label=\"Projects\"\n          class=\"w-full sm:w-1/2\"\n          :options=\"projects\"\n          :rules=\"[validators.required]\"\n          name=\"projects\"\n          text-by=\"project_name\"\n          track-by=\"id\"\n          multiple\n          :max-visible-options=\"2\"\n        />\n      </div>\n\n      <div class=\"flex gap-4 w-full\">\n        <div class=\"w-1/2\">\n          <VaSelect\n            v-model=\"newUser.role\"\n            label=\"Role\"\n            class=\"w-full\"\n            :options=\"roleSelectOptions\"\n            :rules=\"[validators.required]\"\n            name=\"role\"\n            value-by=\"value\"\n          />\n        </div>\n\n        <div class=\"flex items-center w-1/2 mt-4\">\n          <VaCheckbox v-model=\"newUser.active\" label=\"Active\" class=\"w-full\" name=\"active\" />\n        </div>\n      </div>\n\n      <VaTextarea v-model=\"newUser.notes\" label=\"Notes\" class=\"w-full\" name=\"notes\" />\n      <div class=\"flex gap-2 flex-col-reverse items-stretch justify-end w-full sm:flex-row sm:items-center\">\n        <VaButton preset=\"secondary\" color=\"secondary\" @click=\"$emit('close')\">Cancel</VaButton>\n        <VaButton :disabled=\"!isValid\" @click=\"onSave\">{{ saveButtonLabel }}</VaButton>\n      </div>\n    </div>\n  </VaForm>\n</template>\n","import { Ref, ref, unref, watch } from 'vue'\nimport { getUsers, updateUser, addUser, removeUser, type Filters, Pagination, Sorting } from '../../../data/pages/users'\nimport { User } from '../types'\nimport { watchIgnorable } from '@vueuse/core'\n\nconst makePaginationRef = () => ref<Pagination>({ page: 1, perPage: 10, total: 0 })\nconst makeSortingRef = () => ref<Sorting>({ sortBy: 'fullname', sortingOrder: null })\nconst makeFiltersRef = () => ref<Partial<Filters>>({ isActive: true, search: '' })\n\nexport const useUsers = (options?: {\n  pagination?: Ref<Pagination>\n  sorting?: Ref<Sorting>\n  filters?: Ref<Partial<Filters>>\n}) => {\n  const isLoading = ref(false)\n  const users = ref<User[]>([])\n\n  const { filters = makeFiltersRef(), sorting = makeSortingRef(), pagination = makePaginationRef() } = options || {}\n\n  const fetch = async () => {\n    isLoading.value = true\n    const { data, pagination: newPagination } = await getUsers({\n      ...unref(filters),\n      ...unref(sorting),\n      ...unref(pagination),\n    })\n    users.value = data\n\n    ignoreUpdates(() => {\n      pagination.value = newPagination\n    })\n\n    isLoading.value = false\n  }\n\n  const { ignoreUpdates } = watchIgnorable([pagination, sorting], fetch, { deep: true })\n\n  watch(\n    filters,\n    () => {\n      // Reset pagination to first page when filters changed\n      pagination.value.page = 1\n      fetch()\n    },\n    { deep: true },\n  )\n\n  fetch()\n\n  return {\n    isLoading,\n\n    filters,\n    sorting,\n    pagination,\n\n    users,\n\n    fetch,\n\n    async add(user: User) {\n      isLoading.value = true\n      await addUser(user)\n      await fetch()\n      isLoading.value = false\n    },\n\n    async update(user: User) {\n      isLoading.value = true\n      await updateUser(user)\n      await fetch()\n      isLoading.value = false\n    },\n\n    async remove(user: User) {\n      isLoading.value = true\n      await removeUser(user)\n      await fetch()\n      isLoading.value = false\n    },\n  }\n}\n","<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport UsersTable from './widgets/UsersTable.vue'\nimport EditUserForm from './widgets/EditUserForm.vue'\nimport { User } from './types'\nimport { useUsers } from './composables/useUsers'\nimport { useModal, useToast } from 'vuestic-ui'\n\nconst doShowEditUserModal = ref(false)\n\nconst { users, isLoading, filters, sorting, pagination, ...usersApi } = useUsers()\n\nconst userToEdit = ref<User | null>(null)\n\nconst showEditUserModal = (user: User) => {\n  userToEdit.value = user\n  doShowEditUserModal.value = true\n}\n\nconst showAddUserModal = () => {\n  userToEdit.value = null\n  doShowEditUserModal.value = true\n}\n\nconst { init: notify } = useToast()\n\nconst onUserSaved = async (user: User) => {\n  if (userToEdit.value) {\n    await usersApi.update(user)\n    notify({\n      message: `${user.fullname} has been updated`,\n      color: 'success',\n    })\n  } else {\n    usersApi.add(user)\n    notify({\n      message: `${user.fullname} has been created`,\n      color: 'success',\n    })\n  }\n}\n\nconst onUserDelete = async (user: User) => {\n  await usersApi.remove(user)\n  notify({\n    message: `${user.fullname} has been deleted`,\n    color: 'success',\n  })\n}\n\nconst editFormRef = ref()\n\nconst { confirm } = useModal()\n\nconst beforeEditFormModalClose = async (hide: () => unknown) => {\n  if (editFormRef.value.isFormHasUnsavedChanges) {\n    const agreed = await confirm({\n      maxWidth: '380px',\n      message: 'Form has unsaved changes. Are you sure you want to close it?',\n      size: 'small',\n    })\n    if (agreed) {\n      hide()\n    }\n  } else {\n    hide()\n  }\n}\n</script>\n\n<template>\n  <h1 class=\"page-title\">Dams</h1>\n\n  <VaCard>\n    <VaCardContent>\n      <div class=\"flex flex-col md:flex-row gap-2 mb-2 justify-between\">\n        <div class=\"flex flex-col md:flex-row gap-2 justify-start\">\n          <!-- <VaButtonToggle\n            v-model=\"filters.isActive\"\n            color=\"background-element\"\n            border-color=\"background-element\"\n            :options=\"[\n              { label: 'Active', value: true },\n              { label: 'Inactive', value: false },\n            ]\"\n          /> -->\n          <VaInput v-model=\"filters.search\" placeholder=\"Search\">\n            <template #prependInner>\n              <VaIcon name=\"search\" color=\"secondary\" size=\"small\" />\n            </template>\n          </VaInput>\n        </div>\n        <!-- <RouterLink to=\"/users/user-create\" aria-label=\"Visit home page\">\n          Add User\n        </RouterLink>\n          <VaButton @click=\"showAddUserModal\">Add User</VaButton> -->\n      </div>\n\n      <UsersTable\n        v-model:sort-by=\"sorting.sortBy\"\n        v-model:sorting-order=\"sorting.sortingOrder\"\n        :users=\"users\"\n        :loading=\"isLoading\"\n        :pagination=\"pagination\"\n        @editUser=\"showEditUserModal\"\n        @deleteUser=\"onUserDelete\"\n      />\n    </VaCardContent>\n  </VaCard>\n\n  <VaModal\n    v-slot=\"{ cancel, ok }\"\n    v-model=\"doShowEditUserModal\"\n    size=\"small\"\n    mobile-fullscreen\n    close-button\n    hide-default-actions\n    :before-cancel=\"beforeEditFormModalClose\"\n  >\n    <h1 class=\"va-h5\">{{ userToEdit ? 'Edit user' : 'Add user' }}</h1>\n    <EditUserForm\n      ref=\"editFormRef\"\n      :user=\"userToEdit\"\n      :save-button-label=\"userToEdit ? 'Save' : 'Add'\"\n      @close=\"cancel\"\n      @save=\"\n        (user) => {\n          onUserSaved(user)\n          ok()\n        }\n      \"\n    />\n  </VaModal>\n</template>\n"],"names":["avatarColor","userName","colors","index","isUrl","avatar","columns","defineVaDataTableColumns","props","__props","emit","__emit","users","toRef","sortByVModel","useVModel","sortingOrderVModel","roleColors","totalPages","computed","confirm","useModal","onUserDelete","user","formatProjectNames","projects","project","defaultNewUser","newUser","ref","isFormHasUnsavedChanges","key","_a","__expose","watch","makeAvatarBlobUrl","newAvatar","form","useForm","onSave","roleSelectOptions","useProjects","makePaginationRef","makeSortingRef","makeFiltersRef","useUsers","options","isLoading","filters","sorting","pagination","fetch","data","newPagination","getUsers","unref","ignoreUpdates","watchIgnorable","addUser","updateUser","removeUser","doShowEditUserModal","usersApi","userToEdit","showEditUserModal","notify","useToast","onUserSaved","editFormRef","beforeEditFormModalClose","hide"],"mappings":"kpBAIM,MAAAA,EAAeC,GAAqB,CACxC,MAAMC,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,QAAQ,EAC9DC,EAAQF,EAAS,WAAW,CAAC,EAAIC,EAAO,OAC9C,OAAOA,EAAOC,CAAK,CAAA,EAcfC,EAASC,GACNA,EAAO,WAAW,MAAM,GAAKA,EAAO,WAAW,OAAO,61BCb/D,MAAMC,EAAUC,EAAyB,CACvC,CAAE,MAAO,YAAa,IAAK,WAAY,SAAU,EAAK,EACtD,CAAE,MAAO,QAAS,IAAK,QAAS,SAAU,EAAK,EAC/C,CAAE,MAAO,WAAY,IAAK,WAAY,SAAU,EAAK,EACrD,CAAE,MAAO,OAAQ,IAAK,OAAQ,SAAU,EAAK,EAC7C,CAAE,MAAO,WAAY,IAAK,WAAY,SAAU,EAAK,EACrD,CAAE,MAAO,IAAK,IAAK,UAAW,MAAO,OAAQ,CAAA,CAC9C,EAEKC,EAAQC,EAWRC,EAAOC,EAOPC,EAAQC,EAAML,EAAO,OAAO,EAC5BM,EAAeC,EAAUP,EAAO,SAAUE,CAAI,EAC9CM,EAAqBD,EAAUP,EAAO,eAAgBE,CAAI,EAE1DO,EAAuC,CAC3C,MAAO,SACP,KAAM,qBACN,MAAO,SAAA,EAGHC,EAAaC,EAAS,IAAM,KAAK,KAAKX,EAAM,WAAW,MAAQA,EAAM,WAAW,OAAO,CAAC,EAExF,CAAE,QAAAY,GAAYC,IAEdC,EAAe,MAAOC,GAAe,CAC1B,MAAMH,EAAQ,CAC3B,MAAO,cACP,QAAS,mCAAmCG,EAAK,QAAQ,IACzD,OAAQ,SACR,WAAY,SACZ,KAAM,QACN,SAAU,OAAA,CACX,GAGCb,EAAK,cAAea,CAAI,CAC1B,EAGIC,EAAsBC,GACtBA,EAAS,SAAW,EAAU,cAC9BA,EAAS,QAAU,EACdA,EAAS,IAAKC,GAAYA,EAAQ,YAAY,EAAE,KAAK,IAAI,EAIhED,EACG,MAAM,EAAG,CAAC,EACV,IAAKC,GAAYA,EAAQ,YAAY,EACrC,KAAK,IAAI,EACZ,OACCD,EAAS,OAAS,GACnB,imFCtEJ,MAAMjB,EAAQC,EAWRkB,EAAuB,CAC3B,GAAI,GACJ,OAAQ,GACR,SAAU,GACV,KAAM,OACN,SAAU,GACV,MAAO,GACP,MAAO,GACP,OAAQ,GACR,SAAU,CAAC,CAAA,EAGPC,EAAUC,EAAU,CAAE,GAAGF,CAAgB,CAAA,EAEzCG,EAA0BX,EAAS,IAChC,OAAO,KAAKS,EAAQ,KAAK,EAAE,KAAMG,GAAQ,OAC1C,OAAAA,IAAQ,UAAYA,IAAQ,WACvB,GAGFH,EAAQ,MAAMG,CAAiB,MAAOC,EAAAxB,EAAM,MAAQmB,IAAd,YAAAK,EAAgCD,GAAiB,CAC/F,CACF,EAEYE,EAAA,CACX,wBAAAH,CAAA,CACD,EAEDI,EACE,IAAM1B,EAAM,KACZ,IAAM,CACCA,EAAM,OAIXoB,EAAQ,MAAQ,CACd,GAAGpB,EAAM,KACT,OAAQA,EAAM,KAAK,QAAU,EAAA,EAEjC,EACA,CAAE,UAAW,EAAK,CAAA,EAGpB,MAAMH,EAASwB,IAETM,EAAqB9B,GAClB,IAAI,gBAAgBA,CAAM,EAG7B6B,EAAA7B,EAAS+B,GAAc,CAC3BR,EAAQ,MAAM,OAASQ,EAAYD,EAAkBC,CAAS,EAAI,EAAA,CACnE,EAEK,MAAAC,EAAOC,EAAQ,eAAe,EAE9B5B,EAAOC,EAEP4B,EAAS,IAAM,CACfF,EAAK,YACF3B,EAAA,OAAQkB,EAAQ,KAAK,CAC5B,EAGIY,EAAuE,CAC3E,CAAE,KAAM,QAAS,MAAO,OAAQ,EAChC,CAAE,KAAM,OAAQ,MAAO,MAAO,EAC9B,CAAE,KAAM,QAAS,MAAO,OAAQ,CAAA,EAG5B,CAAE,SAAAf,CAAS,EAAIgB,EAAY,CAAE,WAAYZ,EAAI,CAAE,KAAM,EAAG,QAAS,KAAM,MAAO,EAAI,CAAA,CAAG,CAAA,+8ECnFrFa,GAAoB,IAAMb,EAAgB,CAAE,KAAM,EAAG,QAAS,GAAI,MAAO,CAAA,CAAG,EAC5Ec,GAAiB,IAAMd,EAAa,CAAE,OAAQ,WAAY,aAAc,KAAM,EAC9Ee,GAAiB,IAAMf,EAAsB,CAAE,SAAU,GAAM,OAAQ,GAAI,EAEpEgB,GAAYC,GAInB,CACE,MAAAC,EAAYlB,EAAI,EAAK,EACrBjB,EAAQiB,EAAY,CAAA,CAAE,EAEtB,CAAE,QAAAmB,EAAUJ,GAAe,EAAG,QAAAK,EAAUN,KAAkB,WAAAO,EAAaR,GAAkB,GAAMI,GAAW,CAAA,EAE1GK,EAAQ,SAAY,CACxBJ,EAAU,MAAQ,GAClB,KAAM,CAAE,KAAAK,EAAM,WAAYC,CAAc,EAAI,MAAMC,GAAS,CACzD,GAAGC,EAAMP,CAAO,EAChB,GAAGO,EAAMN,CAAO,EAChB,GAAGM,EAAML,CAAU,CAAA,CACpB,EACDtC,EAAM,MAAQwC,EAEdI,EAAc,IAAM,CAClBN,EAAW,MAAQG,CAAA,CACpB,EAEDN,EAAU,MAAQ,EAAA,EAGd,CAAE,cAAAS,CAAA,EAAkBC,GAAe,CAACP,EAAYD,CAAO,EAAGE,EAAO,CAAE,KAAM,EAAM,CAAA,EAErF,OAAAjB,EACEc,EACA,IAAM,CAEJE,EAAW,MAAM,KAAO,EAClBC,GACR,EACA,CAAE,KAAM,EAAK,CAAA,EAGTA,IAEC,CACL,UAAAJ,EAEA,QAAAC,EACA,QAAAC,EACA,WAAAC,EAEA,MAAAtC,EAEA,MAAAuC,EAEA,MAAM,IAAI5B,EAAY,CACpBwB,EAAU,MAAQ,GAClB,MAAMW,EAAQnC,CAAI,EAClB,MAAM4B,EAAM,EACZJ,EAAU,MAAQ,EACpB,EAEA,MAAM,OAAOxB,EAAY,CACvBwB,EAAU,MAAQ,GAClB,MAAMY,GAAWpC,CAAI,EACrB,MAAM4B,EAAM,EACZJ,EAAU,MAAQ,EACpB,EAEA,MAAM,OAAOxB,EAAY,CACvBwB,EAAU,MAAQ,GAClB,MAAMa,GAAWrC,CAAI,EACrB,MAAM4B,EAAM,EACZJ,EAAU,MAAQ,EACpB,CAAA,CAEJ,6NCzEM,MAAAc,EAAsBhC,EAAI,EAAK,EAE/B,CAAE,MAAAjB,EAAO,UAAAmC,EAAW,QAAAC,EAAS,QAAAC,EAAS,WAAAC,EAAY,GAAGY,GAAajB,KAElEkB,EAAalC,EAAiB,IAAI,EAElCmC,EAAqBzC,GAAe,CACxCwC,EAAW,MAAQxC,EACnBsC,EAAoB,MAAQ,EAAA,EAQxB,CAAE,KAAMI,CAAO,EAAIC,GAAS,EAE5BC,EAAc,MAAO5C,GAAe,CACpCwC,EAAW,OACP,MAAAD,EAAS,OAAOvC,CAAI,EACnB0C,EAAA,CACL,QAAS,GAAG1C,EAAK,QAAQ,oBACzB,MAAO,SAAA,CACR,IAEDuC,EAAS,IAAIvC,CAAI,EACV0C,EAAA,CACL,QAAS,GAAG1C,EAAK,QAAQ,oBACzB,MAAO,SAAA,CACR,EACH,EAGID,EAAe,MAAOC,GAAe,CACnC,MAAAuC,EAAS,OAAOvC,CAAI,EACnB0C,EAAA,CACL,QAAS,GAAG1C,EAAK,QAAQ,oBACzB,MAAO,SAAA,CACR,CAAA,EAGG6C,EAAcvC,IAEd,CAAE,QAAAT,GAAYC,IAEdgD,EAA2B,MAAOC,GAAwB,CAC1DF,EAAY,MAAM,wBACL,MAAMhD,EAAQ,CAC3B,SAAU,QACV,QAAS,+DACT,KAAM,OAAA,CACP,GAEMkD,IAGFA,GACP"}