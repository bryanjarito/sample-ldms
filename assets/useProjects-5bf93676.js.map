{"version":3,"file":"useProjects-5bf93676.js","sources":["../../src/pages/projects/composables/useProjects.ts"],"sourcesContent":["import { Ref, ref, unref } from 'vue'\nimport {\n  getProjects,\n  addProject,\n  updateProject,\n  removeProject,\n  Sorting,\n  Pagination,\n} from '../../../data/pages/projects'\nimport { Project } from '../types'\nimport { watchIgnorable } from '@vueuse/core'\n\nconst makePaginationRef = () => ref<Pagination>({ page: 1, perPage: 10, total: 0 })\nconst makeSortingRef = () => ref<Sorting>({ sortBy: 'creation_date', sortingOrder: 'desc' })\n\nexport const useProjects = (options?: { sorting?: Ref<Sorting>; pagination?: Ref<Pagination> }) => {\n  const isLoading = ref(false)\n  const projects = ref<Project[]>([])\n\n  const { sorting = makeSortingRef(), pagination = makePaginationRef() } = options ?? {}\n\n  const fetch = async () => {\n    isLoading.value = true\n    const { data, pagination: newPagination } = await getProjects({\n      ...unref(sorting),\n      ...unref(pagination),\n    })\n    projects.value = data as Project[]\n\n    ignoreUpdates(() => {\n      pagination.value = newPagination\n    })\n\n    isLoading.value = false\n  }\n\n  const { ignoreUpdates } = watchIgnorable([pagination, sorting], fetch, { deep: true })\n\n  fetch()\n\n  return {\n    isLoading,\n\n    projects,\n\n    fetch,\n\n    async add(project: Omit<Project, 'id' | 'creation_date'>) {\n      isLoading.value = true\n      await addProject({\n        ...project,\n        project_owner: project.project_owner.id,\n        team: project.team.map((user) => user.id),\n      })\n      await fetch()\n      isLoading.value = false\n    },\n\n    async update(project: Project) {\n      isLoading.value = true\n      await updateProject({\n        ...project,\n        project_owner: project.project_owner.id,\n        team: project.team.map((user) => user.id),\n      })\n      await fetch()\n      isLoading.value = false\n    },\n\n    async remove(project: Project) {\n      isLoading.value = true\n      await removeProject({\n        ...project,\n        project_owner: project.project_owner.id,\n        team: project.team.map((user) => user.id),\n      })\n      await fetch()\n      isLoading.value = false\n    },\n\n    pagination,\n    sorting,\n  }\n}\n"],"names":["makePaginationRef","ref","makeSortingRef","useProjects","options","isLoading","projects","sorting","pagination","fetch","data","newPagination","getProjects","unref","ignoreUpdates","watchIgnorable","project","addProject","user","updateProject","removeProject"],"mappings":"iHAYA,MAAMA,EAAoB,IAAMC,EAAgB,CAAE,KAAM,EAAG,QAAS,GAAI,MAAO,CAAA,CAAG,EAC5EC,EAAiB,IAAMD,EAAa,CAAE,OAAQ,gBAAiB,aAAc,OAAQ,EAE9EE,EAAeC,GAAuE,CAC3F,MAAAC,EAAYJ,EAAI,EAAK,EACrBK,EAAWL,EAAe,CAAA,CAAE,EAE5B,CAAE,QAAAM,EAAUL,IAAkB,WAAAM,EAAaR,GAAwB,EAAAI,GAAW,GAE9EK,EAAQ,SAAY,CACxBJ,EAAU,MAAQ,GAClB,KAAM,CAAE,KAAAK,EAAM,WAAYC,CAAc,EAAI,MAAMC,EAAY,CAC5D,GAAGC,EAAMN,CAAO,EAChB,GAAGM,EAAML,CAAU,CAAA,CACpB,EACDF,EAAS,MAAQI,EAEjBI,EAAc,IAAM,CAClBN,EAAW,MAAQG,CAAA,CACpB,EAEDN,EAAU,MAAQ,EAAA,EAGd,CAAE,cAAAS,CAAA,EAAkBC,EAAe,CAACP,EAAYD,CAAO,EAAGE,EAAO,CAAE,KAAM,EAAM,CAAA,EAE/E,OAAAA,IAEC,CACL,UAAAJ,EAEA,SAAAC,EAEA,MAAAG,EAEA,MAAM,IAAIO,EAAgD,CACxDX,EAAU,MAAQ,GAClB,MAAMY,EAAW,CACf,GAAGD,EACH,cAAeA,EAAQ,cAAc,GACrC,KAAMA,EAAQ,KAAK,IAAKE,GAASA,EAAK,EAAE,CAAA,CACzC,EACD,MAAMT,EAAM,EACZJ,EAAU,MAAQ,EACpB,EAEA,MAAM,OAAOW,EAAkB,CAC7BX,EAAU,MAAQ,GAClB,MAAMc,EAAc,CAClB,GAAGH,EACH,cAAeA,EAAQ,cAAc,GACrC,KAAMA,EAAQ,KAAK,IAAKE,GAASA,EAAK,EAAE,CAAA,CACzC,EACD,MAAMT,EAAM,EACZJ,EAAU,MAAQ,EACpB,EAEA,MAAM,OAAOW,EAAkB,CAC7BX,EAAU,MAAQ,GAClB,MAAMe,EAAc,CAClB,GAAGJ,EACH,cAAeA,EAAQ,cAAc,GACrC,KAAMA,EAAQ,KAAK,IAAKE,GAASA,EAAK,EAAE,CAAA,CACzC,EACD,MAAMT,EAAM,EACZJ,EAAU,MAAQ,EACpB,EAEA,WAAAG,EACA,QAAAD,CAAA,CAEJ"}